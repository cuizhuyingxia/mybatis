<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置接口IUserDao的映射文件-->
<!-- namespace：接口IAccount的全限定类名-->
<mapper namespace="com.itheima.dao.IAccountDao">

    <resultMap id="accountMap" type="account">
        <id property="id" column="id"></id>
        <result property="uid" column="uid"></result>
        <result property="money" column="money"></result>
        <!-- 建立一对一的关系映射，以实现封装user表的数据，使用延迟加载
            property属性用于指定Account实体类中引用的user对象
            javaType属性用于指定要将user表中的数据封装到哪里，这里我们可以写全类名com.itheima.domain.User 也可以写别名user
            select属性用于指定延迟加载时，使用哪个方法去查询user表的数据
            column属性用于告诉select属性根据哪个id去查询user表的数据，这里我们可以指定为account表中的uid，这样就可以查到account表的账户对应的user表的用户信息
                不过这里可以不用设置javaType属性，因为我们是使用com.itheima.dao.IUserDao.findUserById方法去查询user表的数据，com.itheima.dao.IUserDao.findUserById方法中已经指定了返回结果的封装类型为user
        -->
        <association property="user" javaType="com.itheima.domain.User" select="com.itheima.dao.IUserDao.findUserById" column="uid"></association>
    </resultMap>

    <!-- 查询所有账户，以及账户所属用户的信息 -->
    <select id="findAll" resultMap="accountMap">
        select * from account;
    </select>

    <!-- 根据uid查询账户信息 -->
    <select id="findAccountByUid" parameterType="int" resultType="account">
        select * from account where uid = #{uid};
    </select>
</mapper>

