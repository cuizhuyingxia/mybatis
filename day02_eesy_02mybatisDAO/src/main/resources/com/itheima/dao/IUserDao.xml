<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置接口IUserDao的映射文件-->
<!-- namespace：接口IUserDao的全限定类名-->
<mapper namespace="com.itheima.dao.IUserDao">

    <!-- id：需要执行接口IUserDao中的方法名称 -->   <!-- resultType：用于封装查询结果的实体类的全限定类名 -->
    <select id="findAll" resultType="com.itheima.domain.User">
        select * from user;
    </select>

    <!-- parameterMap：方法中的参数类型-->
    <insert id="saveUser" parameterType="com.itheima.domain.User">
        <!-- 在执行插入语句之后，获取这条插入语句的id -->    <!-- keyProperty：实体类中的属性id    keyColumn：表中的字段id   resultType：返回值类型为整型     order：在插入语句执行完成后，再执行 -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        <!-- 从User中取出对应的属性，作为values的值 -->
        insert into user(username, address, sex, birthday) values(#{username}, #{address}, #{sex}, #{birthday});
    </insert>

    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set address = #{address}, sex = #{sex} where id = #{id};
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        <!-- 因为参数类型是整型，所以只有一个参数，那么在取值时，参数名称可以任意写，例如：suibian_id -->
        delete from user where id = #{suibian_id};
    </delete>

    <select id="findById" parameterType="java.lang.Integer" resultType="com.itheima.domain.User">
        select * from user where id = #{id};
    </select>

    <select id="findByUsername" parameterType="string" resultType="com.itheima.domain.User">
        <!-- select * from user where username like '%${value}%'; -->
        select * from user where username like #{username};
    </select>

    <select id="findTotal" resultType="int">
        select count(*) from user;
    </select>

</mapper>